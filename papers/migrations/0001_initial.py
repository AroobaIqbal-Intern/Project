# Generated by Django 5.2.5 on 2025-08-16 10:51

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=500)),
                ('author', models.CharField(max_length=200)),
                ('abstract', models.TextField(blank=True, null=True)),
                ('file', models.FileField(upload_to='papers/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf', 'docx', 'txt'])])),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('processed', models.BooleanField(default=False)),
                ('content_text', models.TextField(blank=True, null=True)),
                ('doi', models.CharField(blank=True, max_length=100, null=True)),
                ('journal', models.CharField(blank=True, max_length=200, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('keywords', models.TextField(blank=True, null=True)),
                ('uploaded_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='PaperMetadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_pages', models.IntegerField(blank=True, null=True)),
                ('language', models.CharField(default='en', max_length=10)),
                ('file_size', models.BigIntegerField(blank=True, null=True)),
                ('processing_status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('last_processed', models.DateTimeField(auto_now=True)),
                ('paper', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metadata', to='papers.paper')),
            ],
        ),
        migrations.CreateModel(
            name='PaperChunk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('chunk_index', models.IntegerField()),
                ('page_number', models.IntegerField(blank=True, null=True)),
                ('section', models.CharField(blank=True, max_length=100, null=True)),
                ('embedding', models.BinaryField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='papers.paper')),
            ],
            options={
                'ordering': ['paper', 'chunk_index'],
                'unique_together': {('paper', 'chunk_index')},
            },
        ),
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference_text', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('source_paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='references', to='papers.paper')),
                ('target_paper', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cited_by', to='papers.paper')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('source_paper', 'target_paper')},
            },
        ),
    ]
